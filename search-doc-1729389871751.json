[{"title":"Axis","type":0,"sectionRef":"#","url":"/axis/docs/intro","content":"","keywords":""},{"title":"Pitch​","type":1,"pageTitle":"Axis","url":"/axis/docs/intro#pitch","content":"Axis is a framework designed to simplify and enhance the development process for creating large-scale modular systems in Roblox. It provides developers with tools to build efficient, reusable components while maintaining flexibility and scalability. It is mainly designed for games which try to make Roblox games look as realistic as possible. "},{"title":"Core goals​","type":1,"pageTitle":"Axis","url":"/axis/docs/intro#core-goals","content":"Modularity: Everything in Axis is modular, meaning you can easily swap out, replace, or upgrade parts of your system without breaking functionality.Scalability: Axis is built with performance and scalability in mind, ensuring it can handle both small projects and large-scale applications.Efficiency: By focusing on simplifying complex tasks and offering out-of-the-box solutions, Axis reduces the time needed to develop and maintain robust systems.Ease of Use: Whether you’re a beginner or an expert, Axis is designed to be easy to integrate, with clear documentation and a low learning curve. "},{"title":"Why axis​","type":1,"pageTitle":"Axis","url":"/axis/docs/intro#why-axis","content":"Axis was born out of the need for a more structured, reliable, and scalable framework. It tackles the common issues developers face when managing large, complex systems and provides solutions to ensure your project remains organized and efficient throughout its lifecycle. "},{"title":"EventSystem","type":0,"sectionRef":"#","url":"/axis/api/EventSystem","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem#functions","content":" "},{"title":"NewEvent​","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem#NewEvent","content":"&lt;/&gt; EventSystem.NewEvent(EventName: string) → () Creates a new event  "},{"title":"OnEvent​","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem#OnEvent","content":"&lt;/&gt; EventSystem:OnEvent(EventName: string) → RBXScriptSignal  Get the on event script connection for the event. "},{"title":"Errors","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem##","content":"Type\tDescription&quot;Invalid name; no holder&quot;\tThe passed event name is incorrect and doesn't exist. &quot;Client unsupported&quot;\tClient `OnEvent` functions are not yet supported. &quot;Cannot find events&quot;\tThe event name was valid but the actual event objects cannot be found  "},{"title":"FireEvent​","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem#FireEvent","content":"&lt;/&gt; EventSystem:FireEvent( EventName: string, ...: any-- Arguments to be passed to the events ) → () Fires the event for both the server and the client "},{"title":"Errors","type":1,"pageTitle":"EventSystem","url":"/axis/api/EventSystem##","content":"Type\tDescription&quot;Invalid name; no holder&quot;\tThe passed event name is incorrect and doesn't exist. &quot;Cannot find events&quot;\tThe event name was valid but the actual event objects cannot be found "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/axis/docs/GettingStarted","content":"","keywords":""},{"title":"Installing​","type":1,"pageTitle":"Getting Started","url":"/axis/docs/GettingStarted#installing","content":"It is recommended to use Axis as a git submodule. "},{"title":"Git submodule​","type":1,"pageTitle":"Getting Started","url":"/axis/docs/GettingStarted#git-submodule","content":"use the git submodule command to add Axis as a submodule to your game: git submodule add [GITHUB PATH] Submodules/Axis Once you have it as a submodule, you can add it to your default.project.json to let rojo sync. You can look at the included default.project.json file to see what to add to your own project file. Make sure you also have all the dependencies installed (Everything in the wally.toml file). "},{"title":"Package managers​","type":1,"pageTitle":"Getting Started","url":"/axis/docs/GettingStarted#package-managers","content":"Currently Axis is not on any package managers. In the future I might add it to Wally but I dont know. "},{"title":"PlayerConfig","type":0,"sectionRef":"#","url":"/axis/api/PlayerConfig","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#properties","content":" "},{"title":"DefaultWalkSpeed​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#DefaultWalkSpeed","content":"&lt;/&gt; PlayerConfig.DefaultWalkSpeed: number What the player's walkspeed should be set to when their character spawns  "},{"title":"LockFirstPerson​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#LockFirstPerson","content":"&lt;/&gt; PlayerConfig.LockFirstPerson: boolean Should the player be locked in first person mode "},{"title":"Functions​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#functions","content":" "},{"title":"ReturnAsTable​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#ReturnAsTable","content":"&lt;/&gt; PlayerConfig:ReturnAsTable() → PlayerConfigTable "},{"title":"Types","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig##","content":""},{"title":"​","type":1,"pageTitle":"PlayerConfig","url":"/axis/api/PlayerConfig#PlayerConfigTable","content":"type PlayerConfigTable = { DefaultWalkSpeed: number, LockFirstPerson: boolean }  Returns the player config as a table "},{"title":"Modules","type":0,"sectionRef":"#","url":"/axis/docs/Modules","content":"","keywords":""},{"title":"Writing Modules​","type":1,"pageTitle":"Modules","url":"/axis/docs/Modules#writing-modules","content":"Modules have two key functions that are automatically called by Axis: Init and Start. This separation ensures that dependencies between modules are handled correctly. Init: This is where you initialize objects and set up any necessary preconditions. For example, if your module relies on certain events being created before other modules can use its functionality, those events should be created here. Start: This is where you retrieve and interact with other modules or perform any actions that depend on all modules being initialized. Example: local MyModule = Axis.CreateModule { Name = &quot;MyModule&quot;; Client = {}; } function MyModule:Init() -- Create objects, events, and initial setup end function MyModule:Start() -- Get any modules needed after initialization local SecondModule = Axis.GetModule(&quot;Second&quot;) end return MyModule  Make sure to optimize the Init function to run as quickly as possible. Anything that doesn’t need to happen before other modules can use your module should be deferred to the Start function. Since all Init functions need to complete before any Start functions are called, avoid using blocking or yielding operations in Init, as they can significantly delay the startup process. "},{"title":"RandomLib","type":0,"sectionRef":"#","url":"/axis/api/RandomLib","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#new","content":"&lt;/&gt; RandomLib.new(Seed: number?) → RandomLib Create a new RandomLib instance. If no seed is provided a random one is used. See here  "},{"title":"GenerateNumber​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#GenerateNumber","content":"&lt;/&gt; RandomLib:GenerateNumber( Min: number, Max: number ) → number Generate a random number between Min and Max  "},{"title":"GenerateInteger​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#GenerateInteger","content":"&lt;/&gt; RandomLib:GenerateInteger( Min: number, Max: number, Amount: number ) → number Generate a random integer between Min and Max local RandomObject = Axis.Lib.Random.new() print(RandomObject:GenerateInteger(5, 10)) -- Generate a random number between 5 and 10   "},{"title":"GenerateIntegers​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#GenerateIntegers","content":"&lt;/&gt; RandomLib:GenerateIntegers( Amount: number, Min: number, Max: number ) → {number} Generate a set of random integer between Min and Max and returns them as a table local RandomObject = Axis.Lib.Random.new() print(RandomObject:GenerateIntegers(50, 5, 10)) -- Generate 50 random numbers between 5 and 10   "},{"title":"GenerateUnitVector​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#GenerateUnitVector","content":"&lt;/&gt; RandomLib:GenerateUnitVector() → Vector3  Generates a random unit vector with a random direction. Return vectors are uniformly distributed over the unit sphere.  "},{"title":"ResetSeed​","type":1,"pageTitle":"RandomLib","url":"/axis/api/RandomLib#ResetSeed","content":"&lt;/&gt; RandomLib:ResetSeed(Seed: number?) → () Set a new seed for RNG. If none is provided a random one is used. See here "},{"title":"Axis","type":0,"sectionRef":"#","url":"/axis/api/Axis","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#properties","content":" "},{"title":"Lib​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#Lib","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Axis.Lib: {} Contains all the custom libraries axis provides  "},{"title":"EventSystem​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#EventSystem","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Axis.EventSystem: EventSystem   "},{"title":"Promise​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#Promise","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Axis.Promise: Promise External promise library "},{"title":"Functions​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#functions","content":" "},{"title":"CreateModule​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#CreateModule","content":"This item only works when running on the server. Server &lt;/&gt; Axis.CreateModule(ModuleDef: ModuleDefinition) → Module Returns a table to use for the module. This table contains some axis-related stuff local MyModule = Axis.CreateModule { Name = &quot;MyModule&quot;; Client = {}; } function MyModule:Init() print(&quot;Init&quot;) end function MyModule:Start() print(&quot;Start&quot;) end return MyModule   "},{"title":"CreateController​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#CreateController","content":"This item only works when running on the client. Client &lt;/&gt; Axis.CreateController(ControllerDef: Types.ControllerDefinition) → Types.Controller Wrapper function for controller system function  "},{"title":"AddModule​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddModule","content":"This item only works when running on the server. Server &lt;/&gt; Axis:AddModule(PathToModule: ModuleScript ) → () Wrapper function for module system function  "},{"title":"AddModules​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddModules","content":"This item only works when running on the server. Server &lt;/&gt; Axis:AddModules(Parent: Folder ) → () Adds the modules within the parent. caution This only adds children, use AddModulesDeep to add descendants  "},{"title":"AddModulesDeep​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddModulesDeep","content":"This item only works when running on the server. Server &lt;/&gt; Axis:AddModulesDeep(Parent: Folder ) → () Adds any modules within the parent folder, this includes in sub-folders  "},{"title":"AddController​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddController","content":"This item only works when running on the client. Client &lt;/&gt; Axis:AddController(ControllerScript: ModuleScript ) → () Wrapper function for controller system function  "},{"title":"AddControllers​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddControllers","content":"This item only works when running on the client. Client &lt;/&gt; Axis:AddControllers(Parent: Folder ) → () Adds the controllers within the parent. caution This only adds children, use AddControllersDeep to add descendants  "},{"title":"AddControllersDeep​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#AddControllersDeep","content":"This item only works when running on the client. Client &lt;/&gt; Axis:AddControllersDeep(Parent: Folder ) → () Adds any controllers within the parent folder, this includes in sub-folders  "},{"title":"Boot​","type":1,"pageTitle":"Axis","url":"/axis/api/Axis#Boot","content":"&lt;/&gt; Axis:Boot() → boolean-- Was boot successful Start core systems and initialize all core modules "},{"title":"ModuleSystem","type":0,"sectionRef":"#","url":"/axis/api/ModuleSystem","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#types","content":" "},{"title":"Module​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#Module","content":"&lt;/&gt; interface Module { Name: string Client: table? [any]: any }  "},{"title":"Properties​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#properties","content":" "},{"title":"Modules​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#Modules","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ModuleSystem.Modules: {[string]:any}}  "},{"title":"Functions​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#functions","content":" "},{"title":"Create​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#Create","content":"&lt;/&gt; ModuleSystem.Create(ModuleDef: ModuleDefinition) → Module "},{"title":"Types","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem##","content":""},{"title":"​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#ModuleDefinition","content":"interface ModuleDefinition { Name: string Client: table? [any]: any }  Create a module  "},{"title":"GetModule​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#GetModule","content":"&lt;/&gt; ModuleSystem.GetModule(Name: string) → Module Returns the module with that name "},{"title":"Errors","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem##","content":"Type\tDescription&quot;Name must be a string&quot;\tThe passed name is not a string &quot;Could not find module ...&quot;\tA module does not exist with the passed name  "},{"title":"Add​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#Add","content":"&lt;/&gt; ModuleSystem:Add(ModuleScript: ModuleScript ) → () Add a module to the module list  "},{"title":"Exists​","type":1,"pageTitle":"ModuleSystem","url":"/axis/api/ModuleSystem#Exists","content":"&lt;/&gt; ModuleSystem:Exists(Name: string) → boolean Checks wether a module exists by name "},{"title":"ClientBootstrap","type":0,"sectionRef":"#","url":"/axis/api/ClientBootstrap","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ClientBootstrap","url":"/axis/api/ClientBootstrap#functions","content":" "},{"title":"BootSequence​","type":1,"pageTitle":"ClientBootstrap","url":"/axis/api/ClientBootstrap#BootSequence","content":"&lt;/&gt; ClientBootstrap:BootSequence() → boolean Start up all client-related parts of Axis "},{"title":"ControllerSystem","type":0,"sectionRef":"#","url":"/axis/api/ControllerSystem","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#types","content":" "},{"title":"Controller​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#Controller","content":"&lt;/&gt; interface Controller { Name: string [any]: any }  "},{"title":"Functions​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#functions","content":" "},{"title":"CreateController​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#CreateController","content":"&lt;/&gt; ControllerSystem.CreateController(ControllerDef: ControllerDefinition) → Controller "},{"title":"Types","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem##","content":""},{"title":"​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#ControllerDefinition","content":"interface ControllerDefinition { Name: string [any]: any }  Create a controller  "},{"title":"GetController​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#GetController","content":"&lt;/&gt; ControllerSystem.GetController(Name: string) → Controller Get a controller with the given name  "},{"title":"Add​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#Add","content":"&lt;/&gt; ControllerSystem:Add(ControllerScript: ModuleScript ) → () Add a controller  "},{"title":"Exists​","type":1,"pageTitle":"ControllerSystem","url":"/axis/api/ControllerSystem#Exists","content":"&lt;/&gt; ControllerSystem:Exists(Name: string) → boolean Check if a controller with the given name exists "},{"title":"Execution Model","type":0,"sectionRef":"#","url":"/axis/docs/ExecutionModel","content":"Execution Model","keywords":""},{"title":"ServerBootstrap","type":0,"sectionRef":"#","url":"/axis/api/ServerBootstrap","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#functions","content":" "},{"title":"PhaseOne​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#PhaseOne","content":"&lt;/&gt; ServerBootstrap:PhaseOne() → bool-- Was the phase successful All Axis core objects like events are created, this sets all roblox related properties and setups up anthing roblox-wise  "},{"title":"PhaseTwo​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#PhaseTwo","content":"&lt;/&gt; ServerBootstrap:PhaseTwo() → bool-- Was the phase successful Any roblox functions/events are connected with functions.  "},{"title":"ApplyPlayerConfig​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#ApplyPlayerConfig","content":"&lt;/&gt; ServerBootstrap:ApplyPlayerConfig(Player: Player ) → () Applies the current player config to the given player  "},{"title":"ApplyCharacterConfig​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#ApplyCharacterConfig","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; ServerBootstrap:ApplyCharacterConfig(Player: Player ) → () Applies the current player config to the given player's character "},{"title":"Errors","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap##","content":"Type\tDescription&quot;Player currently doesn't have a character&quot;\tError happens when the function is called but the player's character does not yet exist  "},{"title":"BootSequence​","type":1,"pageTitle":"ServerBootstrap","url":"/axis/api/ServerBootstrap#BootSequence","content":"&lt;/&gt; ServerBootstrap:BootSequence() → bool Executes all the phases in order "}]